{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
			"defaultValue": "[resourceGroup().location]",
            "type": "String"
        },
        "loadBalancersName": { 
			"defaultValue": "lbname",
            "type": "String"
        },
        "alteonsAzureFuncName": { 
			"defaultValue": "func",
            "type": "String"
        },
        "alteonAzureFuncServerfarmsPlanName": { 
			"defaultValue": "serverfarmname",
            "type": "String"
        },
        "alteonsAzureFuncServerFarmId": { 
			"defaultValue": "serverfarm",
            "type": "String"
        },        
        "storageAccountName": { 
			"defaultValue": "storageaccountname",
            "type": "String"
        },
        "storageAccountType": { 
			"defaultValue": "storageaccounttype",
            "type": "String"
        },        
        "blobContainerName": { 
			"defaultValue": "blobcontainername",
            "type": "String"
        },
        "alteonAzureFuncHostNameBindingsName": { 
			"defaultValue": "hostbindingname",
            "type": "String"
        }                                      
    }, 
    "resources": [    
    {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[parameters('storageAccountName')]",
        "apiVersion": "2018-07-01",
        "location": "[parameters('location')]",
        "kind": "BlobStorage",
        "sku": {
            "name": "[parameters('storageAccountType')]",
            "tier": "Standard"
        },
        "properties": 
        {
            "accessTier": "Hot"
        },
        "resources": [
            {
                "name": "[concat('default/', parameters('blobContainerName'))]",
                "type": "blobServices/containers",
                "apiVersion": "2018-03-01-preview",
                "dependsOn": [
                    "[parameters('storageAccountName')]"
                ],
                "properties": {
                "publicAccess": "None"
                }                   
            }  
        ]            
    },         
    {
        "type": "Microsoft.Web/serverfarms",
        "sku": {
            "name": "Y1",
            "tier": "Dynamic",
            "size": "Y1",
            "family": "Y",
            "capacity": 0
        },
        "kind": "functionapp",
        "name": "[parameters('alteonAzureFuncServerfarmsPlanName')]",
        "apiVersion": "2017-08-01",
        "location": "[parameters('location')]",
        "scale": null,
        "properties": {
            "name": "[parameters('alteonAzureFuncServerfarmsPlanName')]",
            "workerTierName": null,
            "adminSiteName": null,
            "hostingEnvironmentProfile": null,
            "perSiteScaling": false,
            "reserved": false,
            "targetWorkerCount": 0,
            "targetWorkerSizeId": 0
        },
        "dependsOn": []
    },      
    {
        "type": "Microsoft.Web/sites",
        "kind": "functionapp",
        "name": "[parameters('alteonsAzureFuncName')]",
        "apiVersion": "2016-08-01",
        "location": "[parameters('location')]",
        "scale": null,
        "properties": {

            "serverFarmId": "[parameters('alteonsAzureFuncServerFarmId')]",
            "reserved": false,
            "siteConfig": null,
            "scmSiteAlsoStopped": false,
            "hostingEnvironmentProfile": null,
            "clientAffinityEnabled": false,
            "clientCertEnabled": false,
            "hostNamesDisabled": false,
            "containerSize": 1536,
            "dailyMemoryTimeQuota": 0,
            "cloningInfo": null
        },
        "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', parameters('alteonAzureFuncServerfarmsPlanName'))]"
        ],
        "resources": [           
            {
                "apiVersion": "2018-02-01",
                "name": "appsettings",
                "type": "config",
                "dependsOn": [
                    "[resourceId('Microsoft.Web/sites', parameters('alteonsAzureFuncName'))]",
                    "[parameters('storageAccountName')]"
                ],
                "properties": {
                    "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2018-02-01').keys[0].value)]", 
                    "AzureWebJobsDashboardWEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2018-02-01').keys[0].value)]", 
                    "FUNCTIONS_EXTENSION_VERSION": "~2",
                    "AzureWebJobsSecretStorageType": "Files"
                }
            },
            {
            "apiVersion": "2018-02-01",
            "name": "TestFunctionCM",
            "type": "functions",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('alteonsAzureFuncName'))]"
            ],
            "properties": {
                "config": {
                "bindings": [
                    {
                    "authLevel": "anonymous",
                    "name": "req",
                    "type": "httpTrigger",
                    "direction": "in"
                    },
                    {
                    "name": "res",
                    "type": "http",
                    "direction": "out"
                    }
                ]
              },
              "files": {
                "run.csx": "using System.Net;\r\n\r\n public static HttpResponseMessage Run(HttpRequestMessage req, TraceWriter log)\r\n\r\n {\r\n\r\n     return req.CreateResponse(HttpStatusCode.OK, \"Hello from MyFunction\");\r\n\r\n }"
              }
            }
          }
       ]                        
    }
],
"outputs": {
    "alteonsAzureFuncName": {
        "type": "String",
        "value": "[listsecrets(resourceId('Microsoft.Web/sites/functions', parameters('alteonsAzureFuncName'), 'TestFunctionCM'),'2016-08-01').trigger_url]"
    }
}
}