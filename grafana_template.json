{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
			"defaultValue": "[resourceGroup().location]",
            "type": "String"
        },
        "networkInterfaceName": {
			"defaultValue": "nisnisgraph",
            "type": "String"
        },
        "networkSecurityGroupName": {
			"defaultValue": "nisnisgraph",
            "type": "String"
        },
        "publicIpAddressName": {
			"defaultValue": "nisnisgraph",
            "type": "String"
        },
        "publicIpAddressType": {
			"defaultValue": "Static",
            "type": "String"
        },
        "publicIpAddressSku": {
			"defaultValue": "standard",
            "type": "String"
        },
        "virtualMachineName": {
			"defaultValue": "nisnisgraph",
            "type": "String"
        },
        "virtualMachineRG": {
			"defaultValue": "nisnisgraph",
            "type": "String"
        },
        "osDiskType": {
			"defaultValue": "Standard_LRS",
            "type": "String"
        },
        "virtualMachineSize": {
			"defaultValue": "Standard_D1",
            "type": "String"
        },
        "adminUsername": {
			"defaultValue": "radware",
            "type": "String"
        },
        "adminPassword": {
			"defaultValue": "radware12345!",
            "type": "SecureString"
        },
		"subnetId":{
            "defaultValue": "none",
			"type": "String"
        },
		"clusterSecurityGroupName":{
            "defaultValue": "none",
			"type": "String"
        },
		"ClientID": {
            "defaultValue": "none",
            "type": "string",
            "metadata": {
                "description": "AD Client ID"
            }
        },
		"ClientSecret": {
            "defaultValue": "none",
            "type": "securestring",
            "metadata": {
                "description": "AD Client Secret"
            }
        },
		"TenantID": {
            "defaultValue": "none",
            "type": "string",
            "metadata": {
                "description": "AD Tenant ID"
            }
        }                    
    },
    "variables": {
        "subnetRef": "[parameters('subnetId')]",
		"subscripID": "[subscription().id]",
        "monitorImagePublisher": "radware",
		"monitorImageOffer": "alteon-va-cluster-monitor-preview",
		"monitor_radware_sku": "alteon-va-cluster-monitoring",	
		"plan": "[variables(concat('plan-', variables('monitorImageOffer')))]",
		"plan-alteon-va-cluster-monitor-preview": {
			"name": "[variables('monitor_radware_sku')]",
			"product": "[variables('monitorImageOffer')]",
			"publisher": "[variables('monitorImagePublisher')]"
		},
		"customData": "[concat('#!/usr/bin/env python3\n', 'import fileinput\n', 'import os\n', '\n', '\n', 'def main():\n', '    filename = ''/etc/prometheus/prometheus.yml''\n', '    with fileinput.FileInput(filename, inplace=True, backup=''.bak'') as file:\n', '        check_words = (\n', '            \"''subscription_id''\",\n', '            \"''tenant_id''\",\n', '            \"''client_id''\",\n', '            \"''client_secret''\",\n', '            \"''resource_group''\"\n', '        )\n', '        rep_words = (\n', '            \"''', variables('subscripID'), '''\",\n', '            \"''', parameters('TenantID'), '''\",\n', '            \"''', parameters('ClientID'), '''\",\n', '            \"''', parameters('ClientSecret'), '''\",\n', '            \"''', parameters('virtualMachineRG'), ';true''\"\n', '        )\n', '        for line in file:\n', '            for check, rep in zip(check_words, rep_words):\n', '                line = line.replace(check, rep).rstrip()\n', '            if ''subscription_id:'' in line:\n', '                line = line.replace(''/subscriptions/'', '''')\n', '            print(line)\n', '    os.system(\"service prometheus restart\")\n', '\n', '\n', 'if __name__ == \"__main__\":\n', '    main()\n', '\n')]"

		},
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('networkInterfaceName')]",
            "apiVersion": "2018-04-01",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]" 
                                
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[parameters('clusterSecurityGroupName')]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "name": "[parameters('publicIpAddressName')]",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineName')]",
            "apiVersion": "2018-04-01",
            "location": "[parameters('location')]",
            "tags": {},
			"plan": "[variables('plan')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "[variables('monitorImagePublisher')]",
						"offer": "[variables('monitorImageOffer')]",
						"sku" : "[variables('monitor_radware_sku')]",
                        "version": "latest"					
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"customData": "[base64(variables('customData'))]"

                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ]
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}